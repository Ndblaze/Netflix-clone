{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","a","get","request","data","results","useEffect","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","APIKEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","str","n","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a36dc11c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\nexport default instance;","import React, {useState, useEffect} from 'react'\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios'\r\nimport './Row.css'\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\r\n\r\n    const fetchData = async () => {\r\n          const request = await axios.get(fetchUrl);\r\n          setMovies(request.data.results);\r\n          return request;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            //https://developer.google.com/youtube/player_parameters\r\n            autoplay: 1,\r\n        }\r\n\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n         if (trailerUrl){\r\n             setTrailerUrl('')\r\n         }else{\r\n             movieTrailer(movie?.name || \"\")\r\n             .then(url => {\r\n                 const urlParams = new URLSearchParams(new URL(url).search);  \r\n                 setTrailerUrl(urlParams.get(\"v\"));\r\n             }).catch((error) => {\r\n                 console.log(error)\r\n             })\r\n         }\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2> { title }</h2>\r\n\r\n            <div className='row_posters'>\r\n                {movies.map((movie) => (\r\n                    <img \r\n                    key={movie.id}\r\n                    onClick={() => handleClick(movie)}\r\n                    className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","\r\n\r\nconst APIKEY = '1ebc528e7a5c756aa108a0349580f013';\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${APIKEY}&with_genres=99`\r\n}\r\n\r\nexport default requests;","import React, {useState, useEffect} from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport './Banner.css'\r\n\r\nconst Banner = () => {\r\n  \r\n     const [movie, setMovie] = useState([])\r\n     const fetchData = async () => {\r\n        const request = await axios.get(requests.fetchNetflixOriginals);\r\n        setMovie(\r\n            request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length) - 1    \r\n        ]\r\n    );\r\n        return request;\r\n  }\r\n    \r\n     useEffect(() => {\r\n        fetchData();\r\n     }, [])\r\n\r\n    const trancate = (str, n) => {\r\n        return str?.length > n ? str.substr(0, n-1) + \", ...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n          style={{\r\n              backgroundSize: \"cover\",\r\n              backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n              )`,\r\n              backgroundPosition: \"center\"\r\n            }}\r\n        >\r\n            <div className=\"banner_contents\">\r\n               <h1 className=\"banner_title\">\r\n                   {movie?.title || movie?.name || movie?.original_name}\r\n               </h1>\r\n               <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n               </div>\r\n\r\n               <h1 className=\"banner_description\" > {trancate(movie?.overview, 150)}</h1>\r\n            </div>\r\n\r\n            <div className=\"banner_fadeButton\" />\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Nav.css'\r\n\r\nconst Nav = () => {\r\n     \r\n    const [show, handleShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100){\r\n                handleShow(true);\r\n            }else{\r\n                handleShow(false);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, [])\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img\r\n               className=\"nav_logo\"\r\n               src=\"https://tse2.mm.bing.net/th?id=OIP.AC0iUF7KyK0iqL7HZ2JzcQHaD5&pid=Api&P=0&w=309&h=163\"\r\n               alt=\"Netflx logo\"\r\n            />\r\n\r\n            <img \r\n              className=\"nav_avatar\"\r\n              src=\"https://tse1.mm.bing.net/th?id=OIP.i2HBuWmNU78kbh4kUkDr7gAAAA&pid=Api&P=0&w=300&h=300\"\r\n              alt=\"avatar logo\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\nimport './App.css';\nimport Row from './Row'\nimport requests from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n\n      <Row \n          title=\"NETFLIX ORIGINALS\" \n          fetchUrl={requests.fetchNetflixOriginals} \n          isLargeRow\n          />\n      <Row title=\"Trending now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}